[{"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\index.js":"1","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\App.js":"2","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\reportWebVitals.js":"3","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\index.js":"4","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\Charts\\Chart.js":"5","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\Cards\\Cards.js":"6","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\CountryPicker\\CountryPicker.js":"7","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\api\\index.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":910,"mtime":1609969765648,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":170,"mtime":1609954612546,"results":"13","hashOfConfig":"10"},{"size":1996,"mtime":1609969491362,"results":"14","hashOfConfig":"10"},{"size":2362,"mtime":1609964963669,"results":"15","hashOfConfig":"10"},{"size":997,"mtime":1609970096417,"results":"16","hashOfConfig":"10"},{"size":1212,"mtime":1609968263161,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"81ryyy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\index.js",[],["39","40"],"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\App.js",["41","42","43"],"import react, { useEffect, useState } from 'react'\nimport style from './App.module.css';\nimport { Cards, Chart, CountryPicker} from './components'\nimport { fetchData } from './api/index'\nimport img from './components/image/image.png'\n\nconst App = () =>{\n\n  const[data, setData] = useState([])\n  const[country,setCountry] = useState('')\n\n  useEffect( async() =>{\n    const getData = await fetchData();\n    setData(getData)\n   \n  },[])\n\n  const handleCountryChange = async(countryValue) =>{\n    const getData = await fetchData(countryValue);\n    \n    setData(getData)\n    setCountry(countryValue)\n    //     console.log(countryValue)\n  }\n  return (\n    <div className={style.container}>\n      <img className={style.image}src={img}/>\n     <Cards data={data}/>\n     <CountryPicker handleCountryChange={handleCountryChange}/>\n     <Chart data={data} country={country}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\reportWebVitals.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\index.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\Charts\\Chart.js",["44","45"],"import react, { useEffect, useState } from 'react'\r\nimport { fetchDailyData } from '../../api/index'\r\nimport { Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data:{recovered,confirmed,deaths},country}) => {\r\n    const[dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n       const handleDailyData = async() =>{\r\n        \r\n           setDailyData(await fetchDailyData(country));\r\n       }\r\n       handleDailyData();\r\n    },[])\r\n    console.log(dailyData)\r\n\r\n    const LineChart = (\r\n        dailyData.length ?\r\n        <Line \r\n          data={{\r\n              labels:dailyData.map(({ date }) => date),\r\n              datasets:[{\r\n                  data:dailyData.map(({ confirmed }) => confirmed),\r\n                  label:'Infected',\r\n                  borderColor:'#3333ff',\r\n                  fill:true\r\n              },{\r\n                data:dailyData.map(({ deaths }) => deaths ),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true\r\n              }],\r\n          }}/>\r\n        : null\r\n    )\r\n    const barChart = (\r\n        (confirmed) ?\r\n        <Bar \r\n          data={{\r\n              labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                    ],\r\n                    data:[recovered.value,confirmed.value,deaths.value]\r\n                }]\r\n          }}\r\n          options={{\r\n              legend:{display:false},\r\n              title:{display:true, text:`Current state in ${country}`}\r\n          }}/>\r\n        :null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            { country ? barChart: LineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\Cards\\Cards.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\components\\CountryPicker\\CountryPicker.js",["46"],"import react, { useEffect, useState } from 'react'\r\nimport{ FormControl, NativeSelect } from '@material-ui/core'\r\nimport { fetchCountries } from '../../api/index'\r\nimport styles from'./CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const[countriesName, setCountriesName] = useState([])\r\n;\r\n    useEffect(() =>{\r\n        const getCountry = async() =>(\r\n            setCountriesName(await fetchCountries())\r\n        )\r\n        getCountry();\r\n    },[setCountriesName])\r\n    // console.log(country)\r\n\r\n    return (\r\n       <FormControl className={styles.formControl}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n               <option value=\"\" >Global</option>\r\n                {countriesName.map((country,index) => (\r\n                    <option value={country} key={index} >{country}</option>\r\n                ))}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\COVID_Tracker\\covid_tracker\\src\\api\\index.js",["47"],"import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async(country) =>{\n  let changeURL = url\n  if(country){\n     changeURL = `${url}/countries/${country}`\n   }\n  \n    try{\n        const { data:{ confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeURL)\n        return { confirmed, recovered, deaths, lastUpdate};\n      }catch(error){\n        console.log(error.message)\n      }\n  \n}\n\nexport const fetchDailyData = async(country) =>{\n  let changeURL = url\n  if(country){\n     changeURL = `${url}/countries/${country}`\n   }\n  try{\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) =>(\n          {\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate,\n\n          }))\n          console.log(modifiedData)\n        return modifiedData\n   }catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchCountries = async() =>{\n  try{\n        const { data:{ countries} } = await axios.get(`${url}/countries`)\n        return(countries.map((country) => country.name))\n\n  }catch(error){\n    console.log(error.message)\n  }\n}",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":12,"column":14,"nodeType":"58","endLine":16,"endColumn":4},{"ruleId":"59","severity":1,"message":"60","line":27,"column":7,"nodeType":"61","endLine":27,"endColumn":46},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"56","severity":1,"message":"62","line":16,"column":7,"nodeType":"63","endLine":16,"endColumn":9,"suggestions":"64"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"65","line":23,"column":6,"nodeType":"54","messageId":"55","endLine":23,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array. If 'setDailyData' needs the current value of 'country', you can also switch to useReducer instead of useState and read 'country' in the reducer.","ArrayExpression",["68"],"'changeURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [country]",{"range":"71","text":"72"},[487,489],"[country]"]